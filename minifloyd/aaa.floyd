~ ********************************************
~ An implementation of the standard Writer class
~
~ This implementation depends on the existence of 
~ an external function in the runtime support library:
~  void io_write( )
~ ********************************************

class Writer is

  ~ writes <char> to stdout 
  writechar(char: int): Writer is
  begin
    io_write(char) 
    writechar := me
  end writechar


  ~ internal method used by writeint
  writeintHelper(num: int) is
    digit: int
  begin
    digit := num - (num / 10)* 10  ~ compute num mod 10
    if num / 10 > 0 then
      writeintHelper(num / 10)
    end if
    io_write(digit + 48)      
  end writeintHelper

  ~ writes <num> to stdout. uses recursion but no Strings
  writeint(num: int): Writer is
  begin
    if (num = 0) then
      io_write(48)
    else
      if not (num >= 0) then
        io_write(45) ~ - symbol
        num := -num
      end if
      writeintHelper(num)
    end if
    
    io_write(13)
    io_write(10)
    
    writeint := me
  end writeint
    
  ~ writes <str> to stdout
  write(str: String): Writer is
    i: int
    len: int
  begin
    len := str.length()
    i := 0
    loop while not (i >= len) 
      io_write(str.charAt(i))
      i := i + 1
    end loop
    
    write := me
  end write
  
  ~ writes <str> to stdout, followed by newline
  ~writeln(str: String): Writer is
  ~begin
    ~write(str)
    ~io_write(13)
    ~io_write(10)
   ~ writeln := me
  ~end writeln    

end Writer
